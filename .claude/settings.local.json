{
  "permissions": {
    "allow": [
      "Read(//c/tmp/**)",
      "Bash(xargs:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(docker pull:*)",
      "Bash(git rm:*)",
      "Bash(do echo \"Run $run_id:\")",
      "Bash(codecovcli:*)",
      "Bash(C:\\Users\\cathe\\AppData\\Roaming\\Python\\Python312-32\\Scripts\\codecovcli.exe create-report --help)",
      "Bash(/c/Users/cathe/AppData/Roaming/Python/Python312-32/Scripts/codecovcli.exe --help)",
      "Bash(/c/Users/cathe/AppData/Roaming/Python/Python312-32/Scripts/codecovcli.exe upload-coverage --help)",
      "WebFetch(domain:api.codecov.io)",
      "Bash(taskkill:*)",
      "Bash(/c/Users/cathe/AppData/Roaming/Python/Python312-32/Scripts/codecovcli.exe create-coverage-report --file=coverage.xml)",
      "Bash(python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term)",
      "Bash(python -m pytest tests/ --cov=backend --cov=api --cov=services --cov=models --cov-report=xml --cov-report=term --maxfail=5 -x)",
      "Bash(python -m pytest tests/ --ignore=tests/test_100_percent_coverage_real.py --cov=backend --cov=api --cov=services --cov=models --cov-report=xml --cov-report=term-missing -q)",
      "Bash(python -m pytest tests/test_service_basics.py --cov=backend --cov=api --cov=services --cov=models --cov-report=xml --cov-report=term)",
      "Bash(/c/Users/cathe/AppData/Roaming/Python/Python312-32/Scripts/codecovcli.exe create-report --help)",
      "Bash(git rev-parse:*)",
      "Bash(/c/Users/cathe/AppData/Roaming/Python/Python312-32/Scripts/codecovcli.exe upload-coverage --file=coverage.xml --dry-run --sha=f4bbb7b363482463296f3231f402b9561595e7a3)",
      "WebFetch(domain:app.codecov.io)",
      "Bash(gh workflow view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh run watch:*)",
      "Bash(python -m pytest tests/ --co -q)",
      "Bash(python -m pytest tests/test_service_basics.py -v)",
      "Bash(git checkout:*)",
      "Bash(python scripts:*)",
      "Bash(gh pr checks:*)"
    ],
    "deny": [],
    "ask": []
  }
}