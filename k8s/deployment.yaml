apiVersion: apps/v1
kind: Deployment
metadata:
  name: chm-app
  namespace: chm
  labels:
    app: chm
    component: backend
    version: v2.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chm
      component: backend
  template:
    metadata:
      labels:
        app: chm
        component: backend
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/api/v1/monitoring/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: chm
        image: chm:v2.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: chm-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: chm-config
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: chm-secrets
              key: secret-key
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/monitoring/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/monitoring/readiness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: audit-logs
          mountPath: /app/logs/audit
      volumes:
      - name: logs
        emptyDir: {}
      - name: audit-logs
        persistentVolumeClaim:
          claimName: chm-audit-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: chm-service
  namespace: chm
  labels:
    app: chm
    component: backend
spec:
  type: ClusterIP
  selector:
    app: chm
    component: backend
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chm-config
  namespace: chm
data:
  redis-url: "redis://redis-service:6379/0"
  celery-broker-url: "redis://redis-service:6379/1"
  celery-result-backend: "redis://redis-service:6379/2"
  allowed-hosts: "chm.local,*.chm.local"
  cors-origins: "http://localhost:3000,http://chm-frontend:3000"
---
apiVersion: v1
kind: Secret
metadata:
  name: chm-secrets
  namespace: chm
type: Opaque
stringData:
  database-url: "postgresql://chm_user:chm_password@postgres-service:5432/chm_db"
  secret-key: "your-super-secret-key-change-in-production"
  snmp-community: "public"
  ssh-default-password: "admin"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chm-audit-logs-pvc
  namespace: chm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard